
led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000025c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000208  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000028c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b01  00000000  00000000  000002ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068a  00000000  00000000  00000ded  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000417  00000000  00000000  00001477  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001890  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000392  00000000  00000000  000018b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000510  00000000  00000000  00001c46  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00002156  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 02 01 	jmp	0x204	; 0x204 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
 **********************************************************************/
int main(void)
{
    // Set pin as output in Data Direction Register
    // DDRB = DDRB or 0010 0000
    DDRB = DDRB | (1<<LED_GREEN);
  80:	25 9a       	sbi	0x04, 5	; 4

    // Set pin LOW in Data Register (LED off)
    // PORTB = PORTB and 1101 1111
    PORTB = PORTB & ~(1<<LED_GREEN);
  82:	2d 98       	cbi	0x05, 5	; 5

    // Infinite loop
    while (1)
    {
        PORTB = PORTB & ~(1<<LED_GREEN);
  84:	2d 98       	cbi	0x05, 5	; 5
        // Invert LED in Data Register
        // PORTB = PORTB xor 0010 0000
        
        // D
        PORTB = PORTB | (1<<LED_GREEN); //
  86:	2d 9a       	sbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  88:	2f ef       	ldi	r18, 0xFF	; 255
  8a:	8d e3       	ldi	r24, 0x3D	; 61
  8c:	99 e4       	ldi	r25, 0x49	; 73
  8e:	21 50       	subi	r18, 0x01	; 1
  90:	80 40       	sbci	r24, 0x00	; 0
  92:	90 40       	sbci	r25, 0x00	; 0
  94:	e1 f7       	brne	.-8      	; 0x8e <main+0xe>
  96:	00 c0       	rjmp	.+0      	; 0x98 <main+0x18>
  98:	00 00       	nop
        _delay_ms(LONG_DELAY);          // 111
        PORTB = PORTB & ~(1<<LED_GREEN); //
  9a:	2d 98       	cbi	0x05, 5	; 5
  9c:	2f ef       	ldi	r18, 0xFF	; 255
  9e:	89 e6       	ldi	r24, 0x69	; 105
  a0:	98 e1       	ldi	r25, 0x18	; 24
  a2:	21 50       	subi	r18, 0x01	; 1
  a4:	80 40       	sbci	r24, 0x00	; 0
  a6:	90 40       	sbci	r25, 0x00	; 0
  a8:	e1 f7       	brne	.-8      	; 0xa2 <main+0x22>
  aa:	00 c0       	rjmp	.+0      	; 0xac <main+0x2c>
  ac:	00 00       	nop
        _delay_ms(SHORT_DELAY);          // 0
        PORTB = PORTB | (1<<LED_GREEN);//
  ae:	2d 9a       	sbi	0x05, 5	; 5
  b0:	2f ef       	ldi	r18, 0xFF	; 255
  b2:	89 e6       	ldi	r24, 0x69	; 105
  b4:	98 e1       	ldi	r25, 0x18	; 24
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	80 40       	sbci	r24, 0x00	; 0
  ba:	90 40       	sbci	r25, 0x00	; 0
  bc:	e1 f7       	brne	.-8      	; 0xb6 <main+0x36>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <main+0x40>
  c0:	00 00       	nop
        _delay_ms(SHORT_DELAY);          // 1
        PORTB = PORTB & ~(1<<LED_GREEN);//
  c2:	2d 98       	cbi	0x05, 5	; 5
  c4:	2f ef       	ldi	r18, 0xFF	; 255
  c6:	89 e6       	ldi	r24, 0x69	; 105
  c8:	98 e1       	ldi	r25, 0x18	; 24
  ca:	21 50       	subi	r18, 0x01	; 1
  cc:	80 40       	sbci	r24, 0x00	; 0
  ce:	90 40       	sbci	r25, 0x00	; 0
  d0:	e1 f7       	brne	.-8      	; 0xca <main+0x4a>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <main+0x54>
  d4:	00 00       	nop
        _delay_ms(SHORT_DELAY);          // 0
        PORTB = PORTB | (1<<LED_GREEN); //
  d6:	2d 9a       	sbi	0x05, 5	; 5
  d8:	2f ef       	ldi	r18, 0xFF	; 255
  da:	89 e6       	ldi	r24, 0x69	; 105
  dc:	98 e1       	ldi	r25, 0x18	; 24
  de:	21 50       	subi	r18, 0x01	; 1
  e0:	80 40       	sbci	r24, 0x00	; 0
  e2:	90 40       	sbci	r25, 0x00	; 0
  e4:	e1 f7       	brne	.-8      	; 0xde <main+0x5e>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <main+0x68>
  e8:	00 00       	nop
        _delay_ms(SHORT_DELAY);          // 1
        
        // Gap between lethers
        PORTB = PORTB & ~(1<<LED_GREEN);//
  ea:	2d 98       	cbi	0x05, 5	; 5
  ec:	2f ef       	ldi	r18, 0xFF	; 255
  ee:	8d e3       	ldi	r24, 0x3D	; 61
  f0:	99 e4       	ldi	r25, 0x49	; 73
  f2:	21 50       	subi	r18, 0x01	; 1
  f4:	80 40       	sbci	r24, 0x00	; 0
  f6:	90 40       	sbci	r25, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <main+0x72>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <main+0x7c>
  fc:	00 00       	nop
        _delay_ms(LONG_DELAY);          // 000
        
        //E
        PORTB = PORTB | (1<<LED_GREEN); //
  fe:	2d 9a       	sbi	0x05, 5	; 5
 100:	2f ef       	ldi	r18, 0xFF	; 255
 102:	89 e6       	ldi	r24, 0x69	; 105
 104:	98 e1       	ldi	r25, 0x18	; 24
 106:	21 50       	subi	r18, 0x01	; 1
 108:	80 40       	sbci	r24, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x86>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x90>
 110:	00 00       	nop
        _delay_ms(SHORT_DELAY);          // 1
        
        // Gap between lethers
        PORTB = PORTB & ~(1<<LED_GREEN); //
 112:	2d 98       	cbi	0x05, 5	; 5
 114:	2f ef       	ldi	r18, 0xFF	; 255
 116:	8d e3       	ldi	r24, 0x3D	; 61
 118:	99 e4       	ldi	r25, 0x49	; 73
 11a:	21 50       	subi	r18, 0x01	; 1
 11c:	80 40       	sbci	r24, 0x00	; 0
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0x9a>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0xa4>
 124:	00 00       	nop
        _delay_ms(LONG_DELAY);          // 000
        
        //2
         PORTB = PORTB | (1<<LED_GREEN);//
 126:	2d 9a       	sbi	0x05, 5	; 5
 128:	2f ef       	ldi	r18, 0xFF	; 255
 12a:	89 e6       	ldi	r24, 0x69	; 105
 12c:	98 e1       	ldi	r25, 0x18	; 24
 12e:	21 50       	subi	r18, 0x01	; 1
 130:	80 40       	sbci	r24, 0x00	; 0
 132:	90 40       	sbci	r25, 0x00	; 0
 134:	e1 f7       	brne	.-8      	; 0x12e <main+0xae>
 136:	00 c0       	rjmp	.+0      	; 0x138 <main+0xb8>
 138:	00 00       	nop
         _delay_ms(SHORT_DELAY);          // 1
         PORTB = PORTB & ~(1<<LED_GREEN);//
 13a:	2d 98       	cbi	0x05, 5	; 5
 13c:	2f ef       	ldi	r18, 0xFF	; 255
 13e:	89 e6       	ldi	r24, 0x69	; 105
 140:	98 e1       	ldi	r25, 0x18	; 24
 142:	21 50       	subi	r18, 0x01	; 1
 144:	80 40       	sbci	r24, 0x00	; 0
 146:	90 40       	sbci	r25, 0x00	; 0
 148:	e1 f7       	brne	.-8      	; 0x142 <main+0xc2>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <main+0xcc>
 14c:	00 00       	nop
         _delay_ms(SHORT_DELAY);          // 0
         PORTB = PORTB | (1<<LED_GREEN); //
 14e:	2d 9a       	sbi	0x05, 5	; 5
 150:	2f ef       	ldi	r18, 0xFF	; 255
 152:	89 e6       	ldi	r24, 0x69	; 105
 154:	98 e1       	ldi	r25, 0x18	; 24
 156:	21 50       	subi	r18, 0x01	; 1
 158:	80 40       	sbci	r24, 0x00	; 0
 15a:	90 40       	sbci	r25, 0x00	; 0
 15c:	e1 f7       	brne	.-8      	; 0x156 <main+0xd6>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <main+0xe0>
 160:	00 00       	nop
         _delay_ms(SHORT_DELAY);          // 1
         PORTB = PORTB & ~(1<<LED_GREEN);//
 162:	2d 98       	cbi	0x05, 5	; 5
 164:	2f ef       	ldi	r18, 0xFF	; 255
 166:	89 e6       	ldi	r24, 0x69	; 105
 168:	98 e1       	ldi	r25, 0x18	; 24
 16a:	21 50       	subi	r18, 0x01	; 1
 16c:	80 40       	sbci	r24, 0x00	; 0
 16e:	90 40       	sbci	r25, 0x00	; 0
 170:	e1 f7       	brne	.-8      	; 0x16a <main+0xea>
 172:	00 c0       	rjmp	.+0      	; 0x174 <main+0xf4>
 174:	00 00       	nop
         _delay_ms(SHORT_DELAY);          // 0
         PORTB = PORTB | (1<<LED_GREEN); //
 176:	2d 9a       	sbi	0x05, 5	; 5
 178:	2f ef       	ldi	r18, 0xFF	; 255
 17a:	8d e3       	ldi	r24, 0x3D	; 61
 17c:	99 e4       	ldi	r25, 0x49	; 73
 17e:	21 50       	subi	r18, 0x01	; 1
 180:	80 40       	sbci	r24, 0x00	; 0
 182:	90 40       	sbci	r25, 0x00	; 0
 184:	e1 f7       	brne	.-8      	; 0x17e <main+0xfe>
 186:	00 c0       	rjmp	.+0      	; 0x188 <main+0x108>
 188:	00 00       	nop
         _delay_ms(LONG_DELAY);          // 111
         PORTB = PORTB & ~(1<<LED_GREEN);//
 18a:	2d 98       	cbi	0x05, 5	; 5
 18c:	2f ef       	ldi	r18, 0xFF	; 255
 18e:	89 e6       	ldi	r24, 0x69	; 105
 190:	98 e1       	ldi	r25, 0x18	; 24
 192:	21 50       	subi	r18, 0x01	; 1
 194:	80 40       	sbci	r24, 0x00	; 0
 196:	90 40       	sbci	r25, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0x112>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0x11c>
 19c:	00 00       	nop
         _delay_ms(SHORT_DELAY);          // 0
         PORTB = PORTB | (1<<LED_GREEN); //
 19e:	2d 9a       	sbi	0x05, 5	; 5
 1a0:	2f ef       	ldi	r18, 0xFF	; 255
 1a2:	8d e3       	ldi	r24, 0x3D	; 61
 1a4:	99 e4       	ldi	r25, 0x49	; 73
 1a6:	21 50       	subi	r18, 0x01	; 1
 1a8:	80 40       	sbci	r24, 0x00	; 0
 1aa:	90 40       	sbci	r25, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <main+0x126>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <main+0x130>
 1b0:	00 00       	nop
         _delay_ms(LONG_DELAY);          // 111
         PORTB = PORTB & ~(1<<LED_GREEN);//
 1b2:	2d 98       	cbi	0x05, 5	; 5
 1b4:	2f ef       	ldi	r18, 0xFF	; 255
 1b6:	89 e6       	ldi	r24, 0x69	; 105
 1b8:	98 e1       	ldi	r25, 0x18	; 24
 1ba:	21 50       	subi	r18, 0x01	; 1
 1bc:	80 40       	sbci	r24, 0x00	; 0
 1be:	90 40       	sbci	r25, 0x00	; 0
 1c0:	e1 f7       	brne	.-8      	; 0x1ba <main+0x13a>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <main+0x144>
 1c4:	00 00       	nop
         _delay_ms(SHORT_DELAY);          // 0
         PORTB = PORTB | (1<<LED_GREEN); //
 1c6:	2d 9a       	sbi	0x05, 5	; 5
 1c8:	2f ef       	ldi	r18, 0xFF	; 255
 1ca:	8d e3       	ldi	r24, 0x3D	; 61
 1cc:	99 e4       	ldi	r25, 0x49	; 73
 1ce:	21 50       	subi	r18, 0x01	; 1
 1d0:	80 40       	sbci	r24, 0x00	; 0
 1d2:	90 40       	sbci	r25, 0x00	; 0
 1d4:	e1 f7       	brne	.-8      	; 0x1ce <main+0x14e>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <main+0x158>
 1d8:	00 00       	nop
         _delay_ms(LONG_DELAY);          // 111
         PORTB = PORTB & ~(1<<LED_GREEN);//
 1da:	2d 98       	cbi	0x05, 5	; 5
 1dc:	2f ef       	ldi	r18, 0xFF	; 255
 1de:	89 e6       	ldi	r24, 0x69	; 105
 1e0:	98 e1       	ldi	r25, 0x18	; 24
 1e2:	21 50       	subi	r18, 0x01	; 1
 1e4:	80 40       	sbci	r24, 0x00	; 0
 1e6:	90 40       	sbci	r25, 0x00	; 0
 1e8:	e1 f7       	brne	.-8      	; 0x1e2 <main+0x162>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <main+0x16c>
 1ec:	00 00       	nop
         _delay_ms(SHORT_DELAY);          // 0
      
        // Gap between lethers
        PORTB = PORTB & ~(1<<LED_GREEN); //
 1ee:	2d 98       	cbi	0x05, 5	; 5
 1f0:	2f ef       	ldi	r18, 0xFF	; 255
 1f2:	8d e3       	ldi	r24, 0x3D	; 61
 1f4:	99 e4       	ldi	r25, 0x49	; 73
 1f6:	21 50       	subi	r18, 0x01	; 1
 1f8:	80 40       	sbci	r24, 0x00	; 0
 1fa:	90 40       	sbci	r25, 0x00	; 0
 1fc:	e1 f7       	brne	.-8      	; 0x1f6 <main+0x176>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <main+0x180>
 200:	00 00       	nop
 202:	40 cf       	rjmp	.-384    	; 0x84 <main+0x4>

00000204 <_exit>:
 204:	f8 94       	cli

00000206 <__stop_program>:
 206:	ff cf       	rjmp	.-2      	; 0x206 <__stop_program>
